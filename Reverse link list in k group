class Solution {
    public int getLength(ListNode head){
        int count=0;
        ListNode temp=head;
        while(temp!=null){
            count++;
            temp=temp.next;
        }
        return count;
    }
    public ListNode reverseKGroup(ListNode head, int k) {
        if(head==null)
            return null;
        if(head.next==null)
            return head;
        int position=0;
        ListNode prev=null;
        ListNode curr=head;
        ListNode temp=head;
        int len=getLength(head);
        if(len<k){
            return head;
        }
        while(position<k){
            ListNode forward=curr.next;
            curr.next=prev;
            prev=curr;
            curr=forward;
            position++;
        }
        if(curr!=null){
            ListNode headOfRecursion=reverseKGroup(curr,k);
            head.next=headOfRecursion;
        }
        return prev;
        
    }
}
