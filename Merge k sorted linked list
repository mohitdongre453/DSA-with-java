class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        PriorityQueue<ListNode> q=new PriorityQueue<>((a, b) -> Integer.compare(a.val, b.val));
        int n=lists.length;
        if(lists.length==0)
            return null;
        for(int i=0; i<n; i++){
            if(lists[i]!=null)
               q.add(lists[i]);
        }
        ListNode head=null;
        ListNode tail=null;
        while(!q.isEmpty()){
            ListNode front=q.remove();
            if(front.next!=null){
                q.add(front.next);
            }
            if(head==null){
                head=front;
                tail=front;
            }
            else{
                tail.next=front;
                tail=front;
            }
        }
        return head;
    }
}
